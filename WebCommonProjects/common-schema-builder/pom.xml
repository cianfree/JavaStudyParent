<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.bxtpw.common</groupId>
	<artifactId>schema-builder</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>schema-builder</name>
	<url>http://maven.apache.org</url>

	<properties>
		<central.repo.url>http://192.168.0.175/nexus/content/groups/public/</central.repo.url>
        <mvn.center.url>https://repo1.maven.org/maven2/</mvn.center.url>
        <oschina.repo.url>http://maven.oschina.net/content/groups/public/</oschina.repo.url>
        <privice.repo.url>http://192.168.0.175/nexus/content/groups/public/</privice.repo.url>
        <repo.release.url>http://192.168.0.175/nexus/content/repositories/bxtpw-releases/</repo.release.url>
        <repo.snapshots.url>http://192.168.0.175/nexus/content/repositories/bxtpw-snapshots/</repo.snapshots.url>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<source.version>1.7</source.version>
		<target.version>1.7</target.version>
		<compiler.version>1.7</compiler.version>
		<poi.version>3.13</poi.version>
		<poi.ooxml.version>3.13</poi.ooxml.version>
		<junit.version>4.11</junit.version>
		<fastjson.version>1.1.35</fastjson.version>
	</properties>
	
	<!-- 定义私有仓库 -->
    <repositories>
        <repository>
            <id>central</id>
            <name>Centran repository</name>
            <url>${central.repo.url}</url>
        </repository>
    </repositories>

    <!--发布库 mvn clean deploy -->
    <distributionManagement>
        <repository>
            <id>bxtpw-releases</id>
            <name>Common Nexus Release Repository</name>
            <url>${repo.release.url}</url>
        </repository>
        <snapshotRepository>
            <id>bxtpw-snapshots</id>
            <name>Common Nexus Snapshot Repository</name>
            <url>${repo.snapshots.url}</url>
        </snapshotRepository>
    </distributionManagement>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${poi.ooxml.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>
	</dependencies>

	<!-- 设置编译的属性，编译级别，编译属性 -->
	<build>
		<finalName>schema-builder</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${source.version}</source>
					<target>${target.version}</target>
					<compilerVersion>${compiler.version}</compilerVersion>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<!-- 部署源代码到私服 -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<attach>true</attach>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-jar-plugin</artifactId> <version>2.4</version> <configuration> <archive> <manifest> <addClasspath>true</addClasspath> 
				<classpathPrefix>lib/</classpathPrefix> <mainClass>com.bxtpw.attendance.AppEntrance</mainClass> </manifest> </archive> </configuration> </plugin> -->


			<!-- The configuration of maven-jar-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<!-- The configuration of the plugin -->
				<configuration>
					<!-- Configuration of the archiver -->
					<archive>

						<!-- 生成的jar中，不要包含pom.xml和pom.properties这两个文件 -->
						<addMavenDescriptor>false</addMavenDescriptor>

						<!-- Manifest specific configuration -->
						<manifest>
							<!-- 是否要把第三方jar放到manifest的classpath中 -->
							<addClasspath>true</addClasspath>
							<!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/ -->
							<classpathPrefix>lib/</classpathPrefix>
							<!-- 应用的main class -->
							<mainClass>com.bxtpw.attendance.AppEntrance</mainClass>
						</manifest>
					</archive>
					<!-- 过滤掉不希望包含在jar中的文件 -->
					<excludes>
						<exclude>${project.basedir}/xml/*</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- The configuration of maven-assembly-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<!-- The configuration of the plugin -->
				<configuration>
					<!-- Specifies the configuration file of the assembly plugin -->
					<descriptors>
						<descriptor>src/main/assembly/package.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
